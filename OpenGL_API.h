#pragma once
#include "Graphics_API.h"

#include <memory>
#include <string>
#include <sstream>
#include <fstream>
#include <iostream>
#include <glad/glad.h>

#include <GL/GL.h>
#include <gl/GLU.h>
#include <gl/GLUT.h> 
#include <glm/glm.hpp>
#include <glm/mat4x4.hpp>
#include <glm/gtc/matrix_transform.hpp>

/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * @class   : OpenGL_API
 * @brief   : OpenGL_API class a class designed to enable openGL API
 * 
 * 
 * @date    : April 2023
 * @author  : William Halling
 * @version : 1.0
 **********************************************************************************************************************************************************************************************************************************************************************************************************************************************/


class OpenGL_API : public Graphics_API
{
	public:

			/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************
			 * @brief : launch
			 * @brief : used to bind a vertex array object
			 **********************************************************************************************************************************************************************************************************************************************************************************************************************************************/

		bool runAPI() override;


			/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************
			 * @brief : clearColor
			 * @brief : used to clear the colour buffer
			 * @param : tempRed   -
			 * @param : tempGreen -
			 * @param : tempBlue  -
			 * @param : tempAlpha - 
			 **********************************************************************************************************************************************************************************************************************************************************************************************************************************************/

		bool setGameWindow(void* windowManager) override;


			/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************
			 * @brief : clearBuffers
			 * @brief : Abstract as it will be over ridden in the child class
			 **********************************************************************************************************************************************************************************************************************************************************************************************************************************************/

		void setCameraView(int viewID, double tempXmin, double tempXMax, double tempYMin, double tempYMax, double tempNearZ, double tempFarZ) override;


			/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************
			 * @brief : setView
			 * @brief : used to set the camera view matrix
			 * @param : tempX	   - int
			 * @param : tempY	   - int
			 * @param : tempWidth  - int
			 * @param : tempHeight - int
			 **********************************************************************************************************************************************************************************************************************************************************************************************************************************************/

		void setView(int tempX, int tempY, int tempWidth, int tempHeight);


			/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************
			 * @brief : bindVAO
			 * @brief : used to bind vertex array objects
			 **********************************************************************************************************************************************************************************************************************************************************************************************************************************************/

		void enableDepthTest() override;


			/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************
			 * @brief : bindVAO
			 * @brief : used to bind vertex array objects
			 **********************************************************************************************************************************************************************************************************************************************************************************************************************************************/

		void bindVAO(int tempVertArra) override;


			/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************
			 * @brief : unbindVAO
			 * @brief : used to unbind vertex array objects
			 **********************************************************************************************************************************************************************************************************************************************************************************************************************************************/

		void unbindVAO() override;



		void clearBuffers() override;


			/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************
			 * @brief : enableDepthTest
			 * @brief : 
			 **********************************************************************************************************************************************************************************************************************************************************************************************************************************************/

		void enableDepthTest() override;


	private:

		GLuint shaderProgram = 0;
};

